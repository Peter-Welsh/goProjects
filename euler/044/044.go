/*
Project Euler problem number 44 (https://projecteuler.net/problem=44)

Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

Solution By Peter Welsh
09/27/2022
*/

package main

import (
	"fmt"
	"math"
)

func main() {
	answer := getAnswer()
	fmt.Println(answer) // 5482660
}

func getAnswer() int {
	var answer, n int
	for answer == 0 {
		n++
		pentags := getPentagonals(int(math.Pow10(n)))
		answer = getSmallestDifference(pentags)
	}
	return answer
}

func getSmallestDifference(pentags map[int]struct{}) int {
	for i := range pentags {
		for j := range pentags {
			if i >= j {
				// avoid checking same combination twice
				continue
			}
			_, exists := pentags[i+j]
			if !exists {
				continue
			}
			d := int(math.Abs(float64(i) - float64(j)))
			_, exists = pentags[d]
			if exists {
				// first one that we find is the smallest one
				return d
			}
		}
	}
	return 0
}

var Dummy struct{}

func getPentagonals(n int) map[int]struct{} {
	pentags := make(map[int]struct{})
	for i := 1; i <= n; i++ {
		pentags[i*(3*i-1)/2] = Dummy
	}
	return pentags
}
