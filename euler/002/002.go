/*
Project Euler problem number 2 (https://projecteuler.net/problem=2)

Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Solution By Peter Welsh
09/08/2022
*/

package main

import (
	"fmt"
)

const maxValue = 4000000

func main() {
	var seq = generateFibonacciSequence()
	sum := getSumOfEvenTerms(seq)
	fmt.Println(sum) //4613732
}

func generateFibonacciSequence() []int {
	seq := []int{0, 1}
	var val int
	i := 0
	for {
		val = seq[i] + seq[i+1]
		if val > maxValue {
			break
		}
		seq = append(seq, val)
		i++
	}

	return seq
}

func getSumOfEvenTerms(seq []int) int {
	sum := 0
	for _, v := range seq {
		if v%2 == 0 {
			sum += v
		}
	}
	return sum
}
